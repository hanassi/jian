AWSTemplateFormatVersion: '2010-09-09'
Description: VPC with Windows Server

Parameters:
  keypairName:
    Description: test-2025-1
    Type: String
    Default: test-2025-1
  vpcCidr:
    Description: VPC CIDR
    Type: String
    Default: "10.1.0.0/16"

Resources:

  # 1. VPC를 생성한다.
  scriptTestVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: TestVPC

  # 2. VPC내 Public Subnet을 생성한다.
  publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-2a
      VpcId: !Ref scriptTestVPC
      CidrBlock: 10.1.1.0/24
      Tags:
        - Key: Name
          Value: pubSUB
          
  # 3. Internet Gateway를 생성하고 VPC에 Attach한다.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: TestIGW
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref scriptTestVPC
      InternetGatewayId: !Ref InternetGateway

  # 4. Public Subnet의 Outbound 를 수정한다: 0.0.0.0/0 -> internet gateway
  PublicRoutTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref scriptTestVPC
      Tags:
        - Key: Name
          Value: pubRT

  PublicToIGW:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRoutTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  PublicSubnetRTAssociate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRoutTable
      SubnetId: !Ref publicSubnet
  
  # 5. Security Group을 생성하고, 22번 port를 open 한다 (ssh 접속을 위해)
  TestSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: pub-sg
      GroupDescription: Windows Security Group
      VpcId: !Ref scriptTestVPC
      SecurityGroupIngress:
      - CidrIp: 175.197.150.12/32
        FromPort: "22"
        ToPort: "22"
        IpProtocol: tcp
      - CidrIp: 175.197.150.12/32
        FromPort: "3389"
        ToPort: "3389"
        IpProtocol: tcp
      Tags:
        - Key: Name
          Value: pub-windows-sg
  
  # 6. 이미 생성한 VPC, Public Subnet, Security Group과 연결된 EC2를 생성한다.
  TestInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref keypairName
      InstanceType: t3.medium
      ImageId: ami-054cc00c87e9394e5
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet: 
          - Ref: "TestSecurityGroup"
        SubnetId: !Ref publicSubnet
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          # OpenSSH 설치
          Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0

          # SSH 서비스 시작 및 자동 실행 설정
          Start-Service sshd
          Set-Service -Name sshd -StartupType 'Automatic'

          # 방화벽 열기 (혹시라도 인바운드 규칙이 막힐 경우 대비)
          New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22

          # Administrator 계정의 authorized_keys 생성
          mkdir C:\ProgramData\ssh
          mkdir C:\Users\Administrator\.ssh
          Copy-Item -Path C:\ProgramData\ssh\administrators_authorized_keys -Destination C:\Users\Administrator\.ssh\authorized_keys
          icacls C:\Users\Administrator\.ssh\authorized_keys /inheritance:r
          icacls C:\Users\Administrator\.ssh\authorized_keys /grant "Administrator:F"
          </powershell>
